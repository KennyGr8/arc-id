# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import billing_adapter_pb2 as billing__adapter__pb2

GRPC_GENERATED_VERSION = '1.75.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in billing_adapter_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class BillingAdapterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePayment = channel.unary_unary(
                '/arcid.billing.BillingAdapter/CreatePayment',
                request_serializer=billing__adapter__pb2.PaymentRequest.SerializeToString,
                response_deserializer=billing__adapter__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.CreateSubscription = channel.unary_unary(
                '/arcid.billing.BillingAdapter/CreateSubscription',
                request_serializer=billing__adapter__pb2.SubscriptionRequest.SerializeToString,
                response_deserializer=billing__adapter__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.CancelSubscription = channel.unary_unary(
                '/arcid.billing.BillingAdapter/CancelSubscription',
                request_serializer=billing__adapter__pb2.SubscriptionRequest.SerializeToString,
                response_deserializer=billing__adapter__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.CreateInvoice = channel.unary_unary(
                '/arcid.billing.BillingAdapter/CreateInvoice',
                request_serializer=billing__adapter__pb2.InvoiceRequest.SerializeToString,
                response_deserializer=billing__adapter__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.GetInvoice = channel.unary_unary(
                '/arcid.billing.BillingAdapter/GetInvoice',
                request_serializer=billing__adapter__pb2.InvoiceRequest.SerializeToString,
                response_deserializer=billing__adapter__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.CreateCustomer = channel.unary_unary(
                '/arcid.billing.BillingAdapter/CreateCustomer',
                request_serializer=billing__adapter__pb2.CustomerRequest.SerializeToString,
                response_deserializer=billing__adapter__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.GetCustomer = channel.unary_unary(
                '/arcid.billing.BillingAdapter/GetCustomer',
                request_serializer=billing__adapter__pb2.CustomerRequest.SerializeToString,
                response_deserializer=billing__adapter__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.HandleWebhook = channel.unary_unary(
                '/arcid.billing.BillingAdapter/HandleWebhook',
                request_serializer=billing__adapter__pb2.WebhookRequest.SerializeToString,
                response_deserializer=billing__adapter__pb2.StatusResponse.FromString,
                _registered_method=True)


class BillingAdapterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreatePayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateInvoice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInvoice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCustomer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCustomer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HandleWebhook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BillingAdapterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePayment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePayment,
                    request_deserializer=billing__adapter__pb2.PaymentRequest.FromString,
                    response_serializer=billing__adapter__pb2.StatusResponse.SerializeToString,
            ),
            'CreateSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSubscription,
                    request_deserializer=billing__adapter__pb2.SubscriptionRequest.FromString,
                    response_serializer=billing__adapter__pb2.StatusResponse.SerializeToString,
            ),
            'CancelSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelSubscription,
                    request_deserializer=billing__adapter__pb2.SubscriptionRequest.FromString,
                    response_serializer=billing__adapter__pb2.StatusResponse.SerializeToString,
            ),
            'CreateInvoice': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateInvoice,
                    request_deserializer=billing__adapter__pb2.InvoiceRequest.FromString,
                    response_serializer=billing__adapter__pb2.StatusResponse.SerializeToString,
            ),
            'GetInvoice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInvoice,
                    request_deserializer=billing__adapter__pb2.InvoiceRequest.FromString,
                    response_serializer=billing__adapter__pb2.StatusResponse.SerializeToString,
            ),
            'CreateCustomer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCustomer,
                    request_deserializer=billing__adapter__pb2.CustomerRequest.FromString,
                    response_serializer=billing__adapter__pb2.StatusResponse.SerializeToString,
            ),
            'GetCustomer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCustomer,
                    request_deserializer=billing__adapter__pb2.CustomerRequest.FromString,
                    response_serializer=billing__adapter__pb2.StatusResponse.SerializeToString,
            ),
            'HandleWebhook': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleWebhook,
                    request_deserializer=billing__adapter__pb2.WebhookRequest.FromString,
                    response_serializer=billing__adapter__pb2.StatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arcid.billing.BillingAdapter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('arcid.billing.BillingAdapter', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class BillingAdapter(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreatePayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arcid.billing.BillingAdapter/CreatePayment',
            billing__adapter__pb2.PaymentRequest.SerializeToString,
            billing__adapter__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arcid.billing.BillingAdapter/CreateSubscription',
            billing__adapter__pb2.SubscriptionRequest.SerializeToString,
            billing__adapter__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arcid.billing.BillingAdapter/CancelSubscription',
            billing__adapter__pb2.SubscriptionRequest.SerializeToString,
            billing__adapter__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateInvoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arcid.billing.BillingAdapter/CreateInvoice',
            billing__adapter__pb2.InvoiceRequest.SerializeToString,
            billing__adapter__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetInvoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arcid.billing.BillingAdapter/GetInvoice',
            billing__adapter__pb2.InvoiceRequest.SerializeToString,
            billing__adapter__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateCustomer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arcid.billing.BillingAdapter/CreateCustomer',
            billing__adapter__pb2.CustomerRequest.SerializeToString,
            billing__adapter__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCustomer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arcid.billing.BillingAdapter/GetCustomer',
            billing__adapter__pb2.CustomerRequest.SerializeToString,
            billing__adapter__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HandleWebhook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arcid.billing.BillingAdapter/HandleWebhook',
            billing__adapter__pb2.WebhookRequest.SerializeToString,
            billing__adapter__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
