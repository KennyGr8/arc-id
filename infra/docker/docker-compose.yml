services:
  mysql:
    image: mysql:8.0
    container_name: arc-id_mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: arc_id
      MYSQL_USER: arcevodev
      MYSQL_PASSWORD: secret123
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -proot || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 300s   # MySQL needs longer init time

  postgres:
    image: postgres:15
    container_name: arc-id_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: arc_id
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s    # Postgres usually fast, but give 1 min buffer

  cockroach:
    image: cockroachdb/cockroach:v23.2.4
    container_name: arc-id_cockroach
    command: start-single-node --insecure
    ports:
      - "26257:26257"
      - "8080:8080"
    volumes:
      - cockroach_data:/cockroach/cockroach-data
    healthcheck:
      test: ["CMD", "cockroach", "sql", "--insecure", "--execute=SELECT 1"]
      interval: 15s
      timeout: 10s
      retries: 20
      start_period: 120s   # Cockroach needs extra buffer to stabilize

#  mongo:
#    image: mongo:7
#    container_name: arc-id_mongo
#    restart: always
#    ports:
#      - "27017:27017"
#    volumes:
#      - mongo_data:/data/db
#    healthcheck:
#      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
#      interval: 10s
#      timeout: 5s
#      retries: 10
#      start_period: 60s

volumes:
  mysql_data:
  postgres_data:
  cockroach_data:
#  mongo_data:
